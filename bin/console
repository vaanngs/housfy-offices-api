#!/usr/bin/env php
<?php

declare(strict_types=1);

use Api\Infrastructure\Console\Migrations\Office\LoadOffices;
use Api\UI\Console\LoadMigrationsCommand;
use Api\UI\Console\RabbitMQ\ConsumerFindAllOfficesCommand;
use Doctrine\DBAL\Tools\Console\Command\ImportCommand;
use Doctrine\DBAL\Tools\Console\Command\ReservedWordsCommand;
use Doctrine\DBAL\Tools\Console\Command\RunSqlCommand;
use Doctrine\DBAL\Tools\Console\Helper\ConnectionHelper;
use Doctrine\ORM\Tools\Console\Command\ClearCache\CollectionRegionCommand;
use Doctrine\ORM\Tools\Console\Command\ClearCache\EntityRegionCommand;
use Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand;
use Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand;
use Doctrine\ORM\Tools\Console\Command\ClearCache\QueryRegionCommand;
use Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand;
use Doctrine\ORM\Tools\Console\Command\ConvertDoctrine1SchemaCommand;
use Doctrine\ORM\Tools\Console\Command\ConvertMappingCommand;
use Doctrine\ORM\Tools\Console\Command\EnsureProductionSettingsCommand;
use Doctrine\ORM\Tools\Console\Command\GenerateEntitiesCommand;
use Doctrine\ORM\Tools\Console\Command\GenerateProxiesCommand;
use Doctrine\ORM\Tools\Console\Command\GenerateRepositoriesCommand;
use Doctrine\ORM\Tools\Console\Command\InfoCommand;
use Doctrine\ORM\Tools\Console\Command\MappingDescribeCommand;
use Doctrine\ORM\Tools\Console\Command\RunDqlCommand;
use Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand;
use Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand;
use Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand;
use Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand;
use Doctrine\ORM\Tools\Console\Helper\EntityManagerHelper;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Helper\HelperSet;

$app = require __DIR__ . '/../config/bootstrap.php';

$container     = $app->getContainer();
$entityManager = $container->get('EntityManager');

$sfApp = new Application();

$helperSet = new HelperSet([
    'db' => new ConnectionHelper($entityManager->getConnection()),
    'em' => new EntityManagerHelper($entityManager),
]);

$sfApp->setHelperSet($helperSet);
$sfApp->addCommands([

    // DBAL Commands
    new ImportCommand(),
    new ReservedWordsCommand(),
    new RunSqlCommand(),

    // ORM Commands
    new CollectionRegionCommand(),
    new EntityRegionCommand(),
    new MetadataCommand(),
    new QueryCommand(),
    new QueryRegionCommand(),
    new ResultCommand(),
    new CreateCommand(),
    new UpdateCommand(),
    new DropCommand(),
    new EnsureProductionSettingsCommand(),
    new ConvertDoctrine1SchemaCommand(),
    new GenerateRepositoriesCommand(),
    new GenerateEntitiesCommand(),
    new GenerateProxiesCommand(),
    new ConvertMappingCommand(),
    new RunDqlCommand(),
    new ValidateSchemaCommand(),
    new InfoCommand(),
    new MappingDescribeCommand(),
]);

$sfApp->add(new LoadMigrationsCommand(
    new LoadOffices()
));

$sfApp->add(new ConsumerFindAllOfficesCommand(
    $container['FindAllOfficesConsumer'],
    $container['CommandBus']
));

$sfApp->run();